{"ast":null,"code":"var _jsxFileName = \"/home/carol/Github/Projeto-App-recipe/src/context/AppProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useMemo, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport AppContext from './AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AppProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [email, setEmail] = useState('');\n  const [title, setTitle] = useState('Meals');\n  const [recipeList, setRecipeList] = useState([]);\n  const [category, setCategory] = useState([]);\n  const [categoryResults, setCategoryResults] = useState([]);\n  const [categoryClicked, setCategoryClicked] = useState(false);\n  const [recipe, setRecipe] = useState([]);\n  const contexto = useMemo(() => ({\n    title,\n    setTitle,\n    recipeList,\n    setRecipeList,\n    email,\n    setEmail,\n    category,\n    recipe,\n    setCategory,\n    categoryResults,\n    setCategoryResults,\n    categoryClicked,\n    setCategoryClicked,\n    setRecipe\n  }), [email, title, recipeList, category, categoryClicked, categoryResults, recipe]); // pega as 5 categories de meals\n\n  useEffect(() => {\n    let ENDPOINT;\n\n    if (title === 'Meals') {\n      ENDPOINT = 'https://www.themealdb.com/api/json/v1/1/list.php?c=list';\n\n      const fetchRecipeCategories = async endpoint => {\n        const response = await fetch(endpoint);\n        const data = await response.json();\n        const categories = data.meals;\n        const five = 5;\n        const getFiveCategories = categories.slice(0, five);\n        setCategory(getFiveCategories);\n      };\n\n      fetchRecipeCategories(ENDPOINT);\n    } // pega as 5 categories de drinks\n\n\n    if (title === 'Drinks') {\n      ENDPOINT = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\n\n      const fetchRecipeCategories = async endpoint => {\n        const response = await fetch(endpoint);\n        const data = await response.json();\n        const categories = data.drinks;\n        const five = 5;\n        const getFiveCategories = categories.slice(0, five);\n        setCategory(getFiveCategories);\n      };\n\n      fetchRecipeCategories(ENDPOINT);\n    }\n  }, [title]);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: contexto,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AppProvider, \"8utOO+p5qkGhM7i90rYwcYRaaOM=\");\n\n_c = AppProvider;\nAppProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default AppProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["useMemo","useState","useEffect","PropTypes","AppContext","AppProvider","children","email","setEmail","title","setTitle","recipeList","setRecipeList","category","setCategory","categoryResults","setCategoryResults","categoryClicked","setCategoryClicked","recipe","setRecipe","contexto","ENDPOINT","fetchRecipeCategories","endpoint","response","fetch","data","json","categories","meals","five","getFiveCategories","slice","drinks","propTypes","node","isRequired"],"sources":["/home/carol/Github/Projeto-App-recipe/src/context/AppProvider.js"],"sourcesContent":["import { useMemo, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport AppContext from './AppContext';\n\nfunction AppProvider({ children }) {\n  const [email, setEmail] = useState('');\n  const [title, setTitle] = useState('Meals');\n  const [recipeList, setRecipeList] = useState([]);\n  const [category, setCategory] = useState([]);\n  const [categoryResults, setCategoryResults] = useState([]);\n  const [categoryClicked, setCategoryClicked] = useState(false);\n  const [recipe, setRecipe] = useState([]);\n\n  const contexto = useMemo(() => ({\n    title,\n    setTitle,\n    recipeList,\n    setRecipeList,\n    email,\n    setEmail,\n    category,\n    recipe,\n    setCategory,\n    categoryResults,\n    setCategoryResults,\n    categoryClicked,\n    setCategoryClicked,\n    setRecipe,\n  }), [email, title, recipeList, category, categoryClicked, categoryResults, recipe]);\n\n  // pega as 5 categories de meals\n  useEffect(() => {\n    let ENDPOINT;\n    if (title === 'Meals') {\n      ENDPOINT = 'https://www.themealdb.com/api/json/v1/1/list.php?c=list';\n      const fetchRecipeCategories = async (endpoint) => {\n        const response = await fetch(endpoint);\n        const data = await response.json();\n        const categories = data.meals;\n        const five = 5;\n        const getFiveCategories = categories.slice(0, five);\n        setCategory(getFiveCategories);\n      };\n      fetchRecipeCategories(ENDPOINT);\n    }\n    // pega as 5 categories de drinks\n    if (title === 'Drinks') {\n      ENDPOINT = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\n      const fetchRecipeCategories = async (endpoint) => {\n        const response = await fetch(endpoint);\n        const data = await response.json();\n        const categories = data.drinks;\n        const five = 5;\n        const getFiveCategories = categories.slice(0, five);\n        setCategory(getFiveCategories);\n      };\n      fetchRecipeCategories(ENDPOINT);\n    }\n  }, [title]);\n\n  return (\n    <AppContext.Provider value={ contexto }>\n      {children}\n    </AppContext.Provider>\n  );\n}\n\nAppProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default AppProvider;\n"],"mappings":";;;AAAA,SAASA,OAAT,EAAkBC,QAAlB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,SAASC,WAAT,OAAmC;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EACjC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,OAAD,CAAlC;EACA,MAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACc,eAAD,EAAkBC,kBAAlB,IAAwCf,QAAQ,CAAC,EAAD,CAAtD;EACA,MAAM,CAACgB,eAAD,EAAkBC,kBAAlB,IAAwCjB,QAAQ,CAAC,KAAD,CAAtD;EACA,MAAM,CAACkB,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,EAAD,CAApC;EAEA,MAAMoB,QAAQ,GAAGrB,OAAO,CAAC,OAAO;IAC9BS,KAD8B;IAE9BC,QAF8B;IAG9BC,UAH8B;IAI9BC,aAJ8B;IAK9BL,KAL8B;IAM9BC,QAN8B;IAO9BK,QAP8B;IAQ9BM,MAR8B;IAS9BL,WAT8B;IAU9BC,eAV8B;IAW9BC,kBAX8B;IAY9BC,eAZ8B;IAa9BC,kBAb8B;IAc9BE;EAd8B,CAAP,CAAD,EAepB,CAACb,KAAD,EAAQE,KAAR,EAAeE,UAAf,EAA2BE,QAA3B,EAAqCI,eAArC,EAAsDF,eAAtD,EAAuEI,MAAvE,CAfoB,CAAxB,CATiC,CA0BjC;;EACAjB,SAAS,CAAC,MAAM;IACd,IAAIoB,QAAJ;;IACA,IAAIb,KAAK,KAAK,OAAd,EAAuB;MACrBa,QAAQ,GAAG,yDAAX;;MACA,MAAMC,qBAAqB,GAAG,MAAOC,QAAP,IAAoB;QAChD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,QAAD,CAA5B;QACA,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;QACA,MAAMC,UAAU,GAAGF,IAAI,CAACG,KAAxB;QACA,MAAMC,IAAI,GAAG,CAAb;QACA,MAAMC,iBAAiB,GAAGH,UAAU,CAACI,KAAX,CAAiB,CAAjB,EAAoBF,IAApB,CAA1B;QACAjB,WAAW,CAACkB,iBAAD,CAAX;MACD,CAPD;;MAQAT,qBAAqB,CAACD,QAAD,CAArB;IACD,CAba,CAcd;;;IACA,IAAIb,KAAK,KAAK,QAAd,EAAwB;MACtBa,QAAQ,GAAG,6DAAX;;MACA,MAAMC,qBAAqB,GAAG,MAAOC,QAAP,IAAoB;QAChD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,QAAD,CAA5B;QACA,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;QACA,MAAMC,UAAU,GAAGF,IAAI,CAACO,MAAxB;QACA,MAAMH,IAAI,GAAG,CAAb;QACA,MAAMC,iBAAiB,GAAGH,UAAU,CAACI,KAAX,CAAiB,CAAjB,EAAoBF,IAApB,CAA1B;QACAjB,WAAW,CAACkB,iBAAD,CAAX;MACD,CAPD;;MAQAT,qBAAqB,CAACD,QAAD,CAArB;IACD;EACF,CA3BQ,EA2BN,CAACb,KAAD,CA3BM,CAAT;EA6BA,oBACE,QAAC,UAAD,CAAY,QAAZ;IAAqB,KAAK,EAAGY,QAA7B;IAAA,UACGf;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GA7DQD,W;;KAAAA,W;AA+DTA,WAAW,CAAC8B,SAAZ,GAAwB;EACtB7B,QAAQ,EAAEH,SAAS,CAACiC,IAAV,CAAeC;AADH,CAAxB;AAIA,eAAehC,WAAf"},"metadata":{},"sourceType":"module"}