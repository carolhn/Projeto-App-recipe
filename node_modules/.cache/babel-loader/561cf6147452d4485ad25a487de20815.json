{"ast":null,"code":"var _jsxFileName = \"/home/carol/Projetos/sd-024-b-project-recipes-app/src/components/Carousel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types'; // import Card from 'react-bootstrap/Card';\n\nimport RecipeCard from './RecipeCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Carousel(_ref) {\n  _s();\n\n  let {\n    recommendations\n  } = _ref;\n  const [count, setCount] = useState(0);\n  const recipes = recommendations;\n  const recommedationsTreated = recipes.map(e => ({\n    id: e.idDrink || e.idMeal,\n    title: e.strDrink || e.strMeal,\n    img: e.strDrinkThumb || e.strMealThumb\n  }));\n\n  const btnBack = () => {\n    const upperLimit = 4;\n    const lowerLimit = 0;\n\n    if (count > lowerLimit) {\n      setCount(prevState => prevState - 2);\n    }\n\n    if (count === lowerLimit) {\n      setCount(upperLimit);\n    }\n  };\n\n  const btnNext = () => {\n    const upperLimit = 4;\n\n    if (count < upperLimit) {\n      setCount(prevState => prevState + 2);\n    }\n\n    if (count === upperLimit) {\n      setCount(0);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: btnBack,\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), recommendations, recommedationsTreated.map((recipe, i) => /*#__PURE__*/_jsxDEV(RecipeCard, {\n      id: recipe.id,\n      name: recipe.title,\n      img: recipe.img\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this)\n    /*\n    <Card\n      style={ { width: '18rem' } }\n      data-testid={ `${i}-recommendation-card` }\n      key={ recipe.id }\n      hidden={ !toggleHidden(i) }\n    >\n      <Card.Img variant=\"top\" src={ recipe.img } />\n      <Card.Body>\n        <Card.Title>{recipe.title}</Card.Title>\n         {<Button variant=\"primary\">Go somewhere</Button>}\n      </Card.Body>\n    </Card>\n    */\n    ), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: btnNext,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Carousel, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n\n_c = Carousel;\nCarousel.propTypes = {\n  recommendations: PropTypes.shape({\n    id: PropTypes.string,\n    title: PropTypes.string,\n    img: PropTypes.string\n  }).isRequired\n}; // next and back button\n// https://stackoverflow.com/questions/63566290/how-to-implement-previous-and-next-buttons-in-react\n\nvar _c;\n\n$RefreshReg$(_c, \"Carousel\");","map":{"version":3,"names":["React","useState","PropTypes","RecipeCard","Carousel","recommendations","count","setCount","recipes","recommedationsTreated","map","e","id","idDrink","idMeal","title","strDrink","strMeal","img","strDrinkThumb","strMealThumb","btnBack","upperLimit","lowerLimit","prevState","btnNext","recipe","i","propTypes","shape","string","isRequired"],"sources":["/home/carol/Projetos/sd-024-b-project-recipes-app/src/components/Carousel.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// import Card from 'react-bootstrap/Card';\nimport RecipeCard from './RecipeCard';\n\nexport default function Carousel({ recommendations }) {\n  const [count, setCount] = useState(0);\n\n  const recipes = recommendations;\n  const recommedationsTreated = recipes.map((e) => ({\n    id: e.idDrink || e.idMeal,\n    title: e.strDrink || e.strMeal,\n    img: e.strDrinkThumb || e.strMealThumb,\n  }));\n\n  const btnBack = () => {\n    const upperLimit = 4;\n    const lowerLimit = 0;\n    if (count > lowerLimit) {\n      setCount((prevState) => (prevState - 2));\n    } if (count === lowerLimit) {\n      setCount(upperLimit);\n    }\n  };\n\n  const btnNext = () => {\n    const upperLimit = 4;\n    if (count < upperLimit) {\n      setCount((prevState) => (prevState + 2));\n    } if (count === upperLimit) {\n      setCount(0);\n    }\n  };\n\n  return (\n    <section>\n      <button\n        type=\"button\"\n        onClick={ btnBack }\n      >\n        Back\n      </button>\n      { recommendations }\n      {\n        recommedationsTreated.map((recipe, i) => (\n          <RecipeCard\n            key={ i }\n            id={ recipe.id }\n            name={ recipe.title }\n            img={ recipe.img }\n          />\n          /*\n          <Card\n            style={ { width: '18rem' } }\n            data-testid={ `${i}-recommendation-card` }\n            key={ recipe.id }\n            hidden={ !toggleHidden(i) }\n          >\n            <Card.Img variant=\"top\" src={ recipe.img } />\n            <Card.Body>\n              <Card.Title>{recipe.title}</Card.Title>\n\n              {<Button variant=\"primary\">Go somewhere</Button>}\n            </Card.Body>\n          </Card>\n          */\n        ))\n      }\n      <button\n        type=\"button\"\n        onClick={ btnNext }\n      >\n        Next\n      </button>\n    </section>\n  );\n}\n\nCarousel.propTypes = {\n  recommendations: PropTypes.shape({\n    id: PropTypes.string,\n    title: PropTypes.string,\n    img: PropTypes.string,\n  }).isRequired,\n};\n// next and back button\n// https://stackoverflow.com/questions/63566290/how-to-implement-previous-and-next-buttons-in-react\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,eAAe,SAASC,QAAT,OAAuC;EAAA;;EAAA,IAArB;IAAEC;EAAF,CAAqB;EACpD,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAlC;EAEA,MAAMO,OAAO,GAAGH,eAAhB;EACA,MAAMI,qBAAqB,GAAGD,OAAO,CAACE,GAAR,CAAaC,CAAD,KAAQ;IAChDC,EAAE,EAAED,CAAC,CAACE,OAAF,IAAaF,CAAC,CAACG,MAD6B;IAEhDC,KAAK,EAAEJ,CAAC,CAACK,QAAF,IAAcL,CAAC,CAACM,OAFyB;IAGhDC,GAAG,EAAEP,CAAC,CAACQ,aAAF,IAAmBR,CAAC,CAACS;EAHsB,CAAR,CAAZ,CAA9B;;EAMA,MAAMC,OAAO,GAAG,MAAM;IACpB,MAAMC,UAAU,GAAG,CAAnB;IACA,MAAMC,UAAU,GAAG,CAAnB;;IACA,IAAIjB,KAAK,GAAGiB,UAAZ,EAAwB;MACtBhB,QAAQ,CAAEiB,SAAD,IAAgBA,SAAS,GAAG,CAA7B,CAAR;IACD;;IAAC,IAAIlB,KAAK,KAAKiB,UAAd,EAA0B;MAC1BhB,QAAQ,CAACe,UAAD,CAAR;IACD;EACF,CARD;;EAUA,MAAMG,OAAO,GAAG,MAAM;IACpB,MAAMH,UAAU,GAAG,CAAnB;;IACA,IAAIhB,KAAK,GAAGgB,UAAZ,EAAwB;MACtBf,QAAQ,CAAEiB,SAAD,IAAgBA,SAAS,GAAG,CAA7B,CAAR;IACD;;IAAC,IAAIlB,KAAK,KAAKgB,UAAd,EAA0B;MAC1Bf,QAAQ,CAAC,CAAD,CAAR;IACD;EACF,CAPD;;EASA,oBACE;IAAA,wBACE;MACE,IAAI,EAAC,QADP;MAEE,OAAO,EAAGc,OAFZ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAOIhB,eAPJ,EASII,qBAAqB,CAACC,GAAtB,CAA0B,CAACgB,MAAD,EAASC,CAAT,kBACxB,QAAC,UAAD;MAEE,EAAE,EAAGD,MAAM,CAACd,EAFd;MAGE,IAAI,EAAGc,MAAM,CAACX,KAHhB;MAIE,GAAG,EAAGW,MAAM,CAACR;IAJf,GACQS,CADR;MAAA;MAAA;MAAA;IAAA;IAMA;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IApBQ,CATJ,eAiCE;MACE,IAAI,EAAC,QADP;MAEE,OAAO,EAAGF,OAFZ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAjCF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA0CD;;GAvEuBrB,Q;;KAAAA,Q;AAyExBA,QAAQ,CAACwB,SAAT,GAAqB;EACnBvB,eAAe,EAAEH,SAAS,CAAC2B,KAAV,CAAgB;IAC/BjB,EAAE,EAAEV,SAAS,CAAC4B,MADiB;IAE/Bf,KAAK,EAAEb,SAAS,CAAC4B,MAFc;IAG/BZ,GAAG,EAAEhB,SAAS,CAAC4B;EAHgB,CAAhB,EAIdC;AALgB,CAArB,C,CAOA;AACA"},"metadata":{},"sourceType":"module"}